# server {
#     listen 80;
#     server_name localhost;

#     # Serve React static files
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         # try_files $uri /index.html;
#         try_files $uri $uri/ /index.html;
#     }

#     # Serve static assets (Fix for 404 errors)
#     location /static/ {
#         root /usr/share/nginx/html;
#         expires 6M;
#         access_log off;
#         add_header Cache-Control "public, max-age=15552000";
#     }

#     # # Cache static assets for performance
#     # location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|map)$ {
#     #     expires 6M;
#     #     access_log off;
#     #     add_header Cache-Control "public, max-age=15552000";
#     # }

#     # Forward API requests to backend
#     location /api/ {
#     proxy_pass http://rest-api-service.default.svc.cluster.local:8080;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;

#     # Allow CORS for frontend requests
#     add_header Access-Control-Allow-Origin *;
#     add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
#     add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
#     add_header Access-Control-Allow-Credentials true;

#     if ($request_method = OPTIONS) {
#         add_header Access-Control-Max-Age 3600;
#         return 204;
#     }
# }

# }


# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name myapp.local;
    return 301 https://$host$request_uri;
}

# Secure HTTPS Server
server {
    listen 443 ssl;
    server_name myapp.local;

    # ssl_certificate /app/certs/myapp.local.pem;
    # ssl_certificate_key /app/certs/myapp.local-key.pem;
    ssl_certificate /etc/nginx/certs/tls.crt;
    ssl_certificate_key /etc/nginx/certs/tls.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Serve React static files
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Serve static assets
    location /static/ {
        root /usr/share/nginx/html;
        expires 6M;
        access_log off;
        add_header Cache-Control "public, max-age=15552000";
    }

    # Forward API requests to backend
    location /api/ {
        proxy_pass https://rest-api-service.default.svc.cluster.local:8080;  # ðŸ”¹ Forwarding over HTTPS
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Allow CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
        add_header Access-Control-Allow-Credentials true;

        if ($request_method = OPTIONS) {
            add_header Access-Control-Max-Age 3600;
            return 204;
        }
    }
}
