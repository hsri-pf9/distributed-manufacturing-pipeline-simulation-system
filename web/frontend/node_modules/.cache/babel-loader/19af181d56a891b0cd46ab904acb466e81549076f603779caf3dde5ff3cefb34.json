{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{BrowserRouter as Router,Routes,Route,Link,useNavigate}from\"react-router-dom\";import{TextField,Button,Select,MenuItem,Typography,Container,Box,AppBar,Toolbar}from\"@mui/material\";import axios from\"axios\";import Dashboard from\"../dashboard/dashboard\";// ✅ Function to decode JWT token and extract user_id\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const decodeToken=token=>{try{const payload=JSON.parse(atob(token.split(\".\")[1]));return payload;}catch(error){console.error(\"Failed to decode token:\",error);return null;}};// ✅ Function to check if token is expired\nconst isTokenExpired=token=>{const payload=decodeToken(token);if(!payload||!payload.exp)return true;return Date.now()>=payload.exp*1000;};// ✅ Check and redirect if token is expired\nconst checkSession=navigate=>{const token=localStorage.getItem(\"token\");if(!token||isTokenExpired(token)){console.warn(\"Token expired. Logging out...\");localStorage.clear();navigate(\"/login\");}};const AuthLayout=_ref=>{let{children,title}=_ref;return/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:\"center\",mt:5,p:4,boxShadow:3,borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:2},children:title}),children]})});};const RegisterPage=_ref2=>{let{apiType}=_ref2;const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[message,setMessage]=useState(\"\");const navigate=useNavigate();const handleRegister=async()=>{setMessage(\"\");if(apiType===\"rest\"){try{await axios.post(\"http://localhost:8080/register\",{email,password});setMessage(\"Registration successful! Please check your email to verify.\");window.open(\"https://mail.google.com\",\"_blank\");}catch{setMessage(\"Registration failed. Please try again.\");}}else{console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Register`);setMessage(\"Open your email and click the link to authenticate.\");}};return/*#__PURE__*/_jsxs(AuthLayout,{title:\"Register\",children:[/*#__PURE__*/_jsx(TextField,{label:\"Email\",fullWidth:true,margin:\"normal\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",type:\"password\",fullWidth:true,margin:\"normal\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",fullWidth:true,onClick:handleRegister,sx:{mt:2},children:\"Register\"}),message&&/*#__PURE__*/_jsx(Typography,{sx:{mt:2,color:\"green\"},children:message}),/*#__PURE__*/_jsxs(Typography,{sx:{mt:2},children:[\"Already registered? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"})]})]});};const LoginPage=_ref3=>{let{apiType}=_ref3;const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[message,setMessage]=useState(\"\");const navigate=useNavigate();useEffect(()=>{checkSession(navigate);// ✅ Auto logout if token expired\n},[]);const handleLogin=async()=>{setMessage(\"\");if(apiType===\"rest\"){try{// const response = await axios.post(\n//   \"http://localhost:8080/login\",\n//   { email, password },\n//   {\n//     headers: { \"Content-Type\": \"application/json\" },\n//     withCredentials: true, // ✅ Ensure cross-origin cookies are included\n//   }\n// );\nconst response=await axios.post(\"http://localhost:8080/login\",{email,password});// // ✅ Extract user_id, email, and token correctly\n// const { user_id, token } = response.data;\n// console.log(\"Full Response from Backend:\", response.data);\n// if (!user_id || !email || !token) throw new Error(\"Invalid response from backend\");\n// console.log(\"User ID:\", user_id);\n// // ✅ Store user_id and token for session persistence\n// localStorage.setItem(\"user_id\", user_id);\n// localStorage.setItem(\"email\", email);\n// localStorage.setItem(\"token\", token);\nconst{token}=response.data;if(!token)throw new Error(\"Token not received\");// ✅ Store token in localStorage\nlocalStorage.setItem(\"token\",token);// ✅ Decode token to extract user ID (JWT tokens are usually Base64 encoded)\nconst payload=JSON.parse(atob(token.split(\".\")[1]));localStorage.setItem(\"user_id\",payload.sub);navigate(\"/dashboard\");}catch(error){console.error(\"Login failed:\",error);setMessage(\"Login failed. Please check your credentials.\");}}else{console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Login`);setMessage(\"Check console for gRPC login command.\");}};return/*#__PURE__*/_jsxs(AuthLayout,{title:\"Login\",children:[/*#__PURE__*/_jsx(TextField,{label:\"Email\",fullWidth:true,margin:\"normal\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",type:\"password\",fullWidth:true,margin:\"normal\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",fullWidth:true,onClick:handleLogin,sx:{mt:2},children:\"Login\"}),message&&/*#__PURE__*/_jsx(Typography,{sx:{mt:2,color:\"red\"},children:message}),/*#__PURE__*/_jsxs(Typography,{sx:{mt:2},children:[\"Do not have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register\"})]})]});};const App=()=>{const[apiType,setApiType]=useState(\"rest\");return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{sx:{display:\"flex\",justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Distributed Manufacturing System\"}),/*#__PURE__*/_jsxs(Select,{value:apiType,onChange:e=>setApiType(e.target.value),sx:{color:\"white\",backgroundColor:\"gray\"},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"rest\",children:\"REST API\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"grpc\",children:\"gRPC\"})]})]})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(RegisterPage,{apiType:apiType})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{apiType:apiType})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard/*\",element:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(RegisterPage,{apiType:apiType})})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","useNavigate","TextField","Button","Select","MenuItem","Typography","Container","Box","AppBar","Toolbar","axios","Dashboard","jsx","_jsx","jsxs","_jsxs","decodeToken","token","payload","JSON","parse","atob","split","error","console","isTokenExpired","exp","Date","now","checkSession","navigate","localStorage","getItem","warn","clear","AuthLayout","_ref","children","title","maxWidth","sx","textAlign","mt","p","boxShadow","borderRadius","variant","mb","RegisterPage","_ref2","apiType","email","setEmail","password","setPassword","message","setMessage","handleRegister","post","window","open","log","label","fullWidth","margin","value","onChange","e","target","type","color","onClick","to","LoginPage","_ref3","handleLogin","response","data","Error","setItem","sub","App","setApiType","position","display","justifyContent","backgroundColor","path","element"],"sources":["/Users/harshsrivastava/Desktop/distributed-manufacturing-pipeline-simulation-system/web/frontend/src/components/authpage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Select, MenuItem, Typography, Container, Box, AppBar, Toolbar } from \"@mui/material\";\nimport axios from \"axios\";\nimport Dashboard from \"../dashboard/dashboard\";\n\n// ✅ Function to decode JWT token and extract user_id\nconst decodeToken = (token) => {\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    return payload;\n  } catch (error) {\n    console.error(\"Failed to decode token:\", error);\n    return null;\n  }\n};\n\n// ✅ Function to check if token is expired\nconst isTokenExpired = (token) => {\n  const payload = decodeToken(token);\n  if (!payload || !payload.exp) return true;\n  return Date.now() >= payload.exp * 1000;\n};\n\n// ✅ Check and redirect if token is expired\nconst checkSession = (navigate) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token || isTokenExpired(token)) {\n    console.warn(\"Token expired. Logging out...\");\n    localStorage.clear();\n    navigate(\"/login\");\n  }\n};\n\n\nconst AuthLayout = ({ children, title }) => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ textAlign: \"center\", mt: 5, p: 4, boxShadow: 3, borderRadius: 2 }}>\n        <Typography variant=\"h4\" sx={{ mb: 2 }}>{title}</Typography>\n        {children}\n      </Box>\n    </Container>\n  );\n};\n\nconst RegisterPage = ({ apiType }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleRegister = async () => {\n    setMessage(\"\");\n    if (apiType === \"rest\") {\n      try {\n        await axios.post(\"http://localhost:8080/register\", { email, password });\n        setMessage(\"Registration successful! Please check your email to verify.\");\n        window.open(\"https://mail.google.com\", \"_blank\");\n      } catch {\n        setMessage(\"Registration failed. Please try again.\");\n      }\n    } else {\n      console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Register`);\n      setMessage(\"Open your email and click the link to authenticate.\");\n    }\n  };\n\n  return (\n    <AuthLayout title=\"Register\">\n      <TextField label=\"Email\" fullWidth margin=\"normal\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <TextField label=\"Password\" type=\"password\" fullWidth margin=\"normal\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleRegister} sx={{ mt: 2 }}>Register</Button>\n      {message && <Typography sx={{ mt: 2, color: \"green\" }}>{message}</Typography>}\n      <Typography sx={{ mt: 2 }}>Already registered? <Link to=\"/login\">Login</Link></Typography>\n    </AuthLayout>\n  );\n};\n\nconst LoginPage = ({ apiType }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    checkSession(navigate);  // ✅ Auto logout if token expired\n  }, []);\n\n  const handleLogin = async () => {\n    setMessage(\"\");\n    if (apiType === \"rest\") {\n      try {\n        // const response = await axios.post(\n        //   \"http://localhost:8080/login\",\n        //   { email, password },\n        //   {\n        //     headers: { \"Content-Type\": \"application/json\" },\n        //     withCredentials: true, // ✅ Ensure cross-origin cookies are included\n        //   }\n        // );\n        const response = await axios.post(\"http://localhost:8080/login\", { email, password });\n  \n        // // ✅ Extract user_id, email, and token correctly\n        // const { user_id, token } = response.data;\n        // console.log(\"Full Response from Backend:\", response.data);\n        // if (!user_id || !email || !token) throw new Error(\"Invalid response from backend\");\n  \n        // console.log(\"User ID:\", user_id);\n  \n        // // ✅ Store user_id and token for session persistence\n        // localStorage.setItem(\"user_id\", user_id);\n        // localStorage.setItem(\"email\", email);\n        // localStorage.setItem(\"token\", token);\n\n        const { token } = response.data;\n        if (!token) throw new Error(\"Token not received\");\n\n        // ✅ Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // ✅ Decode token to extract user ID (JWT tokens are usually Base64 encoded)\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        localStorage.setItem(\"user_id\", payload.sub);\n  \n        navigate(\"/dashboard\");\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n        setMessage(\"Login failed. Please check your credentials.\");\n      }\n    } else {\n      console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Login`);\n      setMessage(\"Check console for gRPC login command.\");\n    }\n  };\n  \n\n  return (\n    <AuthLayout title=\"Login\">\n      <TextField label=\"Email\" fullWidth margin=\"normal\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <TextField label=\"Password\" type=\"password\" fullWidth margin=\"normal\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin} sx={{ mt: 2 }}>Login</Button>\n      {message && <Typography sx={{ mt: 2, color: \"red\" }}>{message}</Typography>}\n      <Typography sx={{ mt: 2 }}>Do not have an account? <Link to=\"/register\">Register</Link></Typography>\n    </AuthLayout>\n  );\n};\n\nconst App = () => {\n  const [apiType, setApiType] = useState(\"rest\");\n\n  return (\n    <Router>\n      <AppBar position=\"static\">\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography variant=\"h6\">Distributed Manufacturing System</Typography>\n          <Select value={apiType} onChange={(e) => setApiType(e.target.value)} sx={{ color: \"white\", backgroundColor: \"gray\" }}>\n            <MenuItem value=\"rest\">REST API</MenuItem>\n            <MenuItem value=\"grpc\">gRPC</MenuItem>\n          </Select>\n        </Toolbar>\n      </AppBar>\n      <Routes>\n        <Route path=\"/register\" element={<RegisterPage apiType={apiType} />} />\n        <Route path=\"/login\" element={<LoginPage apiType={apiType} />} />\n        <Route path=\"/dashboard/*\" element={<Dashboard />} />\n        <Route path=\"/\" element={<RegisterPage apiType={apiType} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}