{"ast":null,"code":"var _jsxFileName = \"/Users/harshsrivastava/Desktop/distributed-manufacturing-pipeline-simulation-system/web/frontend/src/components/authpage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Select, MenuItem, Typography, Container, Box, AppBar, Toolbar } from \"@mui/material\";\nimport axios from \"axios\";\nimport Dashboard from \"../dashboard/dashboard\";\n\n// ✅ Function to decode JWT token and extract user_id\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst decodeToken = token => {\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    return payload;\n  } catch (error) {\n    console.error(\"Failed to decode token:\", error);\n    return null;\n  }\n};\n\n// ✅ Function to check if token is expired\nconst isTokenExpired = token => {\n  const payload = decodeToken(token);\n  if (!payload || !payload.exp) return true;\n  return Date.now() >= payload.exp * 1000;\n};\n\n// ✅ Check and redirect if token is expired\nconst checkSession = navigate => {\n  const token = localStorage.getItem(\"token\");\n  if (!token || isTokenExpired(token)) {\n    console.warn(\"Token expired. Logging out...\");\n    localStorage.clear();\n    navigate(\"/login\");\n  }\n};\nconst AuthLayout = ({\n  children,\n  title\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\",\n        mt: 5,\n        p: 4,\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 2\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthLayout;\nconst RegisterPage = ({\n  apiType\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    setMessage(\"\");\n    if (apiType === \"rest\") {\n      try {\n        await axios.post(\"http://localhost:8080/register\", {\n          email,\n          password\n        });\n        setMessage(\"Registration successful! Please check your email to verify.\");\n        window.open(\"https://mail.google.com\", \"_blank\");\n      } catch {\n        setMessage(\"Registration failed. Please try again.\");\n      }\n    } else {\n      console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Register`);\n      setMessage(\"Open your email and click the link to authenticate.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    title: \"Register\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: handleRegister,\n      sx: {\n        mt: 2\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2,\n        color: \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"pYIZRxIlFAD5+gNNexhYiyUpiX4=\", false, function () {\n  return [useNavigate];\n});\n_c2 = RegisterPage;\nconst LoginPage = ({\n  apiType\n}) => {\n  _s2();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkSession(navigate); // ✅ Auto logout if token expired\n  }, []);\n  const handleLogin = async () => {\n    setMessage(\"\");\n    if (apiType === \"rest\") {\n      try {\n        // const response = await axios.post(\n        //   \"http://localhost:8080/login\",\n        //   { email, password },\n        //   {\n        //     headers: { \"Content-Type\": \"application/json\" },\n        //     withCredentials: true, // ✅ Ensure cross-origin cookies are included\n        //   }\n        // );\n        const response = await axios.post(\"http://localhost:8080/login\", {\n          email,\n          password\n        });\n\n        // // ✅ Extract user_id, email, and token correctly\n        // const { user_id, token } = response.data;\n        // console.log(\"Full Response from Backend:\", response.data);\n        // if (!user_id || !email || !token) throw new Error(\"Invalid response from backend\");\n\n        // console.log(\"User ID:\", user_id);\n\n        // // ✅ Store user_id and token for session persistence\n        // localStorage.setItem(\"user_id\", user_id);\n        // localStorage.setItem(\"email\", email);\n        // localStorage.setItem(\"token\", token);\n\n        const {\n          token\n        } = response.data;\n        if (!token) throw new Error(\"Token not received\");\n\n        // ✅ Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // ✅ Decode token to extract user ID (JWT tokens are usually Base64 encoded)\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        localStorage.setItem(\"user_id\", payload.sub);\n        navigate(\"/dashboard\");\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n        setMessage(\"Login failed. Please check your credentials.\");\n      }\n    } else {\n      console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Login`);\n      setMessage(\"Check console for gRPC login command.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    title: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: handleLogin,\n      sx: {\n        mt: 2\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2,\n        color: \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Do not have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(LoginPage, \"DVsfrojKxBzHPIiObo1nYNxJj8I=\", false, function () {\n  return [useNavigate];\n});\n_c3 = LoginPage;\nconst App = () => {\n  _s3();\n  const [apiType, setApiType] = useState(\"rest\");\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Distributed Manufacturing System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: apiType,\n          onChange: e => setApiType(e.target.value),\n          sx: {\n            color: \"white\",\n            backgroundColor: \"gray\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"rest\",\n            children: \"REST API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"grpc\",\n            children: \"gRPC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {\n          apiType: apiType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          apiType: apiType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard/*\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {\n          apiType: apiType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s3(App, \"I2YU0n0tPxFFXC7TAiF1c9nAzKo=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AuthLayout\");\n$RefreshReg$(_c2, \"RegisterPage\");\n$RefreshReg$(_c3, \"LoginPage\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Link","useNavigate","TextField","Button","Select","MenuItem","Typography","Container","Box","AppBar","Toolbar","axios","Dashboard","jsxDEV","_jsxDEV","decodeToken","token","payload","JSON","parse","atob","split","error","console","isTokenExpired","exp","Date","now","checkSession","navigate","localStorage","getItem","warn","clear","AuthLayout","children","title","maxWidth","sx","textAlign","mt","p","boxShadow","borderRadius","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","_c","RegisterPage","apiType","_s","email","setEmail","password","setPassword","message","setMessage","handleRegister","post","window","open","log","label","fullWidth","margin","value","onChange","e","target","type","color","onClick","to","_c2","LoginPage","_s2","useEffect","handleLogin","response","data","Error","setItem","sub","_c3","App","_s3","setApiType","position","display","justifyContent","backgroundColor","path","element","_c4","$RefreshReg$"],"sources":["/Users/harshsrivastava/Desktop/distributed-manufacturing-pipeline-simulation-system/web/frontend/src/components/authpage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Select, MenuItem, Typography, Container, Box, AppBar, Toolbar } from \"@mui/material\";\nimport axios from \"axios\";\nimport Dashboard from \"../dashboard/dashboard\";\n\n// ✅ Function to decode JWT token and extract user_id\nconst decodeToken = (token) => {\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    return payload;\n  } catch (error) {\n    console.error(\"Failed to decode token:\", error);\n    return null;\n  }\n};\n\n// ✅ Function to check if token is expired\nconst isTokenExpired = (token) => {\n  const payload = decodeToken(token);\n  if (!payload || !payload.exp) return true;\n  return Date.now() >= payload.exp * 1000;\n};\n\n// ✅ Check and redirect if token is expired\nconst checkSession = (navigate) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token || isTokenExpired(token)) {\n    console.warn(\"Token expired. Logging out...\");\n    localStorage.clear();\n    navigate(\"/login\");\n  }\n};\n\n\nconst AuthLayout = ({ children, title }) => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ textAlign: \"center\", mt: 5, p: 4, boxShadow: 3, borderRadius: 2 }}>\n        <Typography variant=\"h4\" sx={{ mb: 2 }}>{title}</Typography>\n        {children}\n      </Box>\n    </Container>\n  );\n};\n\nconst RegisterPage = ({ apiType }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleRegister = async () => {\n    setMessage(\"\");\n    if (apiType === \"rest\") {\n      try {\n        await axios.post(\"http://localhost:8080/register\", { email, password });\n        setMessage(\"Registration successful! Please check your email to verify.\");\n        window.open(\"https://mail.google.com\", \"_blank\");\n      } catch {\n        setMessage(\"Registration failed. Please try again.\");\n      }\n    } else {\n      console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Register`);\n      setMessage(\"Open your email and click the link to authenticate.\");\n    }\n  };\n\n  return (\n    <AuthLayout title=\"Register\">\n      <TextField label=\"Email\" fullWidth margin=\"normal\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <TextField label=\"Password\" type=\"password\" fullWidth margin=\"normal\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleRegister} sx={{ mt: 2 }}>Register</Button>\n      {message && <Typography sx={{ mt: 2, color: \"green\" }}>{message}</Typography>}\n      <Typography sx={{ mt: 2 }}>Already registered? <Link to=\"/login\">Login</Link></Typography>\n    </AuthLayout>\n  );\n};\n\nconst LoginPage = ({ apiType }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    checkSession(navigate);  // ✅ Auto logout if token expired\n  }, []);\n\n  const handleLogin = async () => {\n    setMessage(\"\");\n    if (apiType === \"rest\") {\n      try {\n        // const response = await axios.post(\n        //   \"http://localhost:8080/login\",\n        //   { email, password },\n        //   {\n        //     headers: { \"Content-Type\": \"application/json\" },\n        //     withCredentials: true, // ✅ Ensure cross-origin cookies are included\n        //   }\n        // );\n        const response = await axios.post(\"http://localhost:8080/login\", { email, password });\n  \n        // // ✅ Extract user_id, email, and token correctly\n        // const { user_id, token } = response.data;\n        // console.log(\"Full Response from Backend:\", response.data);\n        // if (!user_id || !email || !token) throw new Error(\"Invalid response from backend\");\n  \n        // console.log(\"User ID:\", user_id);\n  \n        // // ✅ Store user_id and token for session persistence\n        // localStorage.setItem(\"user_id\", user_id);\n        // localStorage.setItem(\"email\", email);\n        // localStorage.setItem(\"token\", token);\n\n        const { token } = response.data;\n        if (!token) throw new Error(\"Token not received\");\n\n        // ✅ Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // ✅ Decode token to extract user ID (JWT tokens are usually Base64 encoded)\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        localStorage.setItem(\"user_id\", payload.sub);\n  \n        navigate(\"/dashboard\");\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n        setMessage(\"Login failed. Please check your credentials.\");\n      }\n    } else {\n      console.log(`Run this gRPC command manually: grpcurl -plaintext -d '{\"email\": \"${email}\", \"password\": \"${password}\"}' localhost:50051 auth.AuthService/Login`);\n      setMessage(\"Check console for gRPC login command.\");\n    }\n  };\n  \n\n  return (\n    <AuthLayout title=\"Login\">\n      <TextField label=\"Email\" fullWidth margin=\"normal\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <TextField label=\"Password\" type=\"password\" fullWidth margin=\"normal\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin} sx={{ mt: 2 }}>Login</Button>\n      {message && <Typography sx={{ mt: 2, color: \"red\" }}>{message}</Typography>}\n      <Typography sx={{ mt: 2 }}>Do not have an account? <Link to=\"/register\">Register</Link></Typography>\n    </AuthLayout>\n  );\n};\n\nconst App = () => {\n  const [apiType, setApiType] = useState(\"rest\");\n\n  return (\n    <Router>\n      <AppBar position=\"static\">\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography variant=\"h6\">Distributed Manufacturing System</Typography>\n          <Select value={apiType} onChange={(e) => setApiType(e.target.value)} sx={{ color: \"white\", backgroundColor: \"gray\" }}>\n            <MenuItem value=\"rest\">REST API</MenuItem>\n            <MenuItem value=\"grpc\">gRPC</MenuItem>\n          </Select>\n        </Toolbar>\n      </AppBar>\n      <Routes>\n        <Route path=\"/register\" element={<RegisterPage apiType={apiType} />} />\n        <Route path=\"/login\" element={<LoginPage apiType={apiType} />} />\n        <Route path=\"/dashboard/*\" element={<Dashboard />} />\n        <Route path=\"/\" element={<RegisterPage apiType={apiType} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}